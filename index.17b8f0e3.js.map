{"mappings":"ACAA,IAAI,EAAe,IACf,EAAa,IAEjB,SAAS,EAAgB,CAAG,CAAE,CAAO,CAAE,CAAW,EAC9C,OAAO,EAAE,SAAS,CAAC,EAAK,CACpB,QAAS,EACT,YAAa,CACjB,EACJ,CAEA,IAAI,EAAM,EACN,iDACA,GACA,6EAGA,EAAW,EACX,gGACA,GACA,iJAGA,EAAM,EAAE,GAAG,CAAC,MAAO,CACnB,OAAQ,CAAC,WAAY,WAAW,CAChC,KAAM,EACN,OAAQ,CAAC,EAAK,EAAc,EAAW,AAC3C,GAOI,EAAe,EAAE,OAAO,CAAC,MAAM,CALpB,CACX,IAAK,EACL,SAAU,CACd,EAE8C,MAAM,KAAK,CAAC,GAEtD,EAAY,EAAE,IAAI,CAAC,MAAM,CAAC,CAC1B,QAAS,CACL,SAAU,CAAC,GAAI,GAAG,CAClB,WAAY,CAAC,GAAI,GAAG,CACpB,YAAa,CAAC,EAAG,GAAG,AACxB,CACJ,GAEI,EAAa,IAAI,EAAU,CAAE,QAAS,kBAAmB,GAEzD,EAAW,IAAI,EAAU,CAAE,QAAS,gBAAiB,GAkBzD,SAAS,EAAS,CAAK,CAAE,CAAK,CAAE,CAAI,EAChC,EAAM,OAAO,CAAC,AAAC,IACX,EAAM,QAAQ,CACV,EAAE,MAAM,CAAC,CAAC,EAAK,GAAG,CAAE,EAAK,GAAG,CAAC,CAAE,CAC3B,KAAM,EACN,MAAO,EAAK,KAAK,AACrB,GAAG,SAAS,CACR,iBACI,EAAK,KAAK,CACV,sBACA,EAAK,OAAO,CACZ,qBACA,EAAK,IAAI,EAGzB,EACJ,CAEA,SAAS,IACL,OAAO,EAAE,kBAAkB,CAAC,CACxB,iBAAkB,GAClB,oBAAqB,CAAA,CACzB,EACJ,EAEA,AAzCA,iBACI,IAAI,EAAU,MAAM,MAAM,uBAAuB,IAAI,CAAC,AAAC,GACnD,EAAS,IAAI,IAGb,EAAQ,MAAM,MAAM,uBAAuB,IAAI,CAAC,AAAC,GACjD,EAAS,IAAI,IAGjB,EAAS,EAAS,EAAc,GAChC,EAAS,EAAO,EAAY,GAE5B,EAAa,UAAU,CAAC,EAAc,SACtC,EAAa,UAAU,CAAC,EAAY,WACxC","sources":["<anon>","script.js"],"sourcesContent":["let museumsGroup = createClusterGroup();\nlet shopsGroup = createClusterGroup();\nfunction createTileLayer(url, maxZoom, attribution) {\n    return L.tileLayer(url, {\n        maxZoom: maxZoom,\n        attribution: attribution\n    });\n}\nlet osm = createTileLayer(\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\", 18, '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>');\nlet ortofoto = createTileLayer(\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\", 18, \"Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community\");\nlet map = L.map(\"map\", {\n    center: [\n        49.8037633,\n        15.4749126\n    ],\n    zoom: 7,\n    layers: [\n        osm,\n        museumsGroup,\n        shopsGroup\n    ]\n});\nlet baseMaps = {\n    OSM: osm,\n    Ortofoto: ortofoto\n};\nlet layerControl = L.control.layers(baseMaps, null).addTo(map);\nlet IconClass = L.Icon.extend({\n    options: {\n        iconSize: [\n            30,\n            30\n        ],\n        iconAnchor: [\n            15,\n            15\n        ],\n        popupAnchor: [\n            0,\n            -5\n        ]\n    }\n});\nlet museumIcon = new IconClass({\n    iconUrl: \"./img/museum.png\"\n});\nlet shopIcon = new IconClass({\n    iconUrl: \"./img/shop.png\"\n});\nasync function getData() {\n    let museums = await fetch(\"./data/museums.json\").then((response)=>response.json());\n    let shops = await fetch(\"./data/sellers.json\").then((response)=>response.json());\n    showData(museums, museumsGroup, museumIcon);\n    showData(shops, shopsGroup, shopIcon);\n    layerControl.addOverlay(museumsGroup, \"Muzea\");\n    layerControl.addOverlay(shopsGroup, \"Prodejci\");\n}\nfunction showData(items, group, icon) {\n    items.forEach((item)=>{\n        group.addLayer(L.marker([\n            item.lat,\n            item.lng\n        ], {\n            icon: icon,\n            title: item.title\n        }).bindPopup(\"<b>N\\xe1zev:</b> \" + item.title + \"<br><b>Adresa:</b> \" + item.address + \"<br><b>M\\u011Bsto:</b> \" + item.city));\n    });\n}\nfunction createClusterGroup() {\n    return L.markerClusterGroup({\n        maxClusterRadius: 30,\n        showCoverageOnHover: false\n    });\n}\ngetData();\n\n//# sourceMappingURL=index.17b8f0e3.js.map\n","let museumsGroup = createClusterGroup();\r\nlet shopsGroup = createClusterGroup();\r\n\r\nfunction createTileLayer(url, maxZoom, attribution) {\r\n    return L.tileLayer(url, {\r\n        maxZoom: maxZoom,\r\n        attribution: attribution,\r\n    });\r\n}\r\n\r\nlet osm = createTileLayer(\r\n    \"https://tile.openstreetmap.org/{z}/{x}/{y}.png\",\r\n    18,\r\n    '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>',\r\n);\r\n\r\nlet ortofoto = createTileLayer(\r\n    \"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\",\r\n    18,\r\n    \"Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community\",\r\n);\r\n\r\nlet map = L.map(\"map\", {\r\n    center: [49.8037633, 15.4749126],\r\n    zoom: 7,\r\n    layers: [osm, museumsGroup, shopsGroup],\r\n});\r\n\r\nlet baseMaps = {\r\n    OSM: osm,\r\n    Ortofoto: ortofoto,\r\n};\r\n\r\nlet layerControl = L.control.layers(baseMaps, null).addTo(map);\r\n\r\nlet IconClass = L.Icon.extend({\r\n    options: {\r\n        iconSize: [30, 30],\r\n        iconAnchor: [15, 15],\r\n        popupAnchor: [0, -5],\r\n    },\r\n});\r\n\r\nlet museumIcon = new IconClass({ iconUrl: \"./img/museum.png\" });\r\n\r\nlet shopIcon = new IconClass({ iconUrl: \"./img/shop.png\" });\r\n\r\nasync function getData() {\r\n    let museums = await fetch(\"./data/museums.json\").then((response) =>\r\n        response.json(),\r\n    );\r\n\r\n    let shops = await fetch(\"./data/sellers.json\").then((response) =>\r\n        response.json(),\r\n    );\r\n\r\n    showData(museums, museumsGroup, museumIcon);\r\n    showData(shops, shopsGroup, shopIcon);\r\n\r\n    layerControl.addOverlay(museumsGroup, \"Muzea\");\r\n    layerControl.addOverlay(shopsGroup, \"Prodejci\");\r\n}\r\n\r\nfunction showData(items, group, icon) {\r\n    items.forEach((item) => {\r\n        group.addLayer(\r\n            L.marker([item.lat, item.lng], {\r\n                icon: icon,\r\n                title: item.title,\r\n            }).bindPopup(\r\n                \"<b>Název:</b> \" +\r\n                    item.title +\r\n                    \"<br><b>Adresa:</b> \" +\r\n                    item.address +\r\n                    \"<br><b>Město:</b> \" +\r\n                    item.city,\r\n            ),\r\n        );\r\n    });\r\n}\r\n\r\nfunction createClusterGroup() {\r\n    return L.markerClusterGroup({\r\n        maxClusterRadius: 30,\r\n        showCoverageOnHover: false,\r\n    });\r\n}\r\n\r\ngetData();\r\n"],"names":["museumsGroup","createClusterGroup","shopsGroup","createTileLayer","url","maxZoom","attribution","L","tileLayer","osm","ortofoto","map","center","zoom","layers","layerControl","control","OSM","Ortofoto","addTo","IconClass","Icon","extend","options","iconSize","iconAnchor","popupAnchor","museumIcon","iconUrl","shopIcon","showData","items","group","icon","forEach","item","addLayer","marker","lat","lng","title","bindPopup","address","city","markerClusterGroup","maxClusterRadius","showCoverageOnHover","getData","museums","fetch","then","response","json","shops","addOverlay"],"version":3,"file":"index.17b8f0e3.js.map"}