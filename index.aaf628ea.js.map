{"mappings":"ACAA,IAAI,EAAe,IACf,EAAa,IAEjB,SAAS,EAAgB,CAAG,CAAE,CAAO,CAAE,CAAW,EAC9C,OAAO,EAAE,SAAS,CAAC,EAAK,CACpB,QAAS,EACT,YAAa,CACjB,EACJ,CAEA,IAAI,EAAM,EACN,iDACA,GACA,6EAGA,EAAW,EACX,gGACA,GACA,iJAGA,EAAM,EAAE,GAAG,CAAC,MAAO,CACnB,OAAQ,CAAC,WAAY,WAAW,CAChC,KAAM,EACN,OAAQ,CAAC,EAAK,EAAc,EAAW,AAC3C,GAOI,EAAe,EAAE,OAAO,CAAC,MAAM,CALpB,CACX,IAAK,EACL,SAAU,CACd,EAE8C,MAAM,KAAK,CAAC,GAEtD,EAAY,EAAE,IAAI,CAAC,MAAM,CAAC,CAC1B,QAAS,CACL,SAAU,CAAC,GAAI,GAAG,CAClB,WAAY,CAAC,GAAI,GAAG,CACpB,YAAa,CAAC,EAAG,GAAG,AACxB,CACJ,GAEI,EAAa,IAAI,EAAU,CAAE,QAAS,kBAAmB,GAEzD,EAAW,IAAI,EAAU,CAAE,QAAS,gBAAiB,GAkBzD,SAAS,EAAS,CAAK,CAAE,CAAK,CAAE,CAAI,EAChC,EAAM,OAAO,CAAC,AAAC,IACX,EAAM,QAAQ,CACV,EAAE,MAAM,CAAC,CAAC,EAAK,GAAG,CAAE,EAAK,GAAG,CAAC,CAAE,CAC3B,KAAM,EACN,MAAO,EAAK,KAAK,AACrB,GAAG,SAAS,CACR,iBACI,EAAK,KAAK,CACV,sBACA,EAAK,OAAO,CACZ,qBACA,EAAK,IAAI,EAGzB,EACJ,CAEA,SAAS,IACL,OAAO,EAAE,kBAAkB,CAAC,CACxB,iBAAkB,GAClB,mBAAoB,SAAU,CAAO,EACjC,OAAO,EAAE,OAAO,CAAC,CACb,KAAM,MAAQ,EAAQ,aAAa,GAAK,OACxC,UAAW,aACX,SAAU,EAAE,KAAK,CAAC,GAAI,GAC1B,EACJ,EACA,oBAAqB,CAAA,CACzB,EACJ,EAEA,AAhDA,iBACI,IAAI,EAAU,MAAM,MAAM,uBAAuB,IAAI,CAAC,AAAC,GACnD,EAAS,IAAI,IAGb,EAAQ,MAAM,MAAM,uBAAuB,IAAI,CAAC,AAAC,GACjD,EAAS,IAAI,IAGjB,EAAS,EAAS,EAAc,GAChC,EAAS,EAAO,EAAY,GAE5B,EAAa,UAAU,CAAC,EAAc,SACtC,EAAa,UAAU,CAAC,EAAY,WACxC","sources":["<anon>","script.js"],"sourcesContent":["let museumsGroup = createClusterGroup();\nlet shopsGroup = createClusterGroup();\nfunction createTileLayer(url, maxZoom, attribution) {\n    return L.tileLayer(url, {\n        maxZoom: maxZoom,\n        attribution: attribution\n    });\n}\nlet osm = createTileLayer(\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\", 18, '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>');\nlet ortofoto = createTileLayer(\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\", 18, \"Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community\");\nlet map = L.map(\"map\", {\n    center: [\n        49.8037633,\n        15.4749126\n    ],\n    zoom: 7,\n    layers: [\n        osm,\n        museumsGroup,\n        shopsGroup\n    ]\n});\nlet baseMaps = {\n    OSM: osm,\n    Ortofoto: ortofoto\n};\nlet layerControl = L.control.layers(baseMaps, null).addTo(map);\nlet IconClass = L.Icon.extend({\n    options: {\n        iconSize: [\n            30,\n            30\n        ],\n        iconAnchor: [\n            15,\n            15\n        ],\n        popupAnchor: [\n            0,\n            -5\n        ]\n    }\n});\nlet museumIcon = new IconClass({\n    iconUrl: \"./img/museum.png\"\n});\nlet shopIcon = new IconClass({\n    iconUrl: \"./img/shop.png\"\n});\nasync function getData() {\n    let museums = await fetch(\"./data/museums.json\").then((response)=>response.json());\n    let shops = await fetch(\"./data/sellers.json\").then((response)=>response.json());\n    showData(museums, museumsGroup, museumIcon);\n    showData(shops, shopsGroup, shopIcon);\n    layerControl.addOverlay(museumsGroup, \"Muzea\");\n    layerControl.addOverlay(shopsGroup, \"Prodejci\");\n}\nfunction showData(items, group, icon) {\n    items.forEach((item)=>{\n        group.addLayer(L.marker([\n            item.lat,\n            item.lng\n        ], {\n            icon: icon,\n            title: item.title\n        }).bindPopup(\"<b>N\\xe1zev:</b> \" + item.title + \"<br><b>Adresa:</b> \" + item.address + \"<br><b>M\\u011Bsto:</b> \" + item.city));\n    });\n}\nfunction createClusterGroup() {\n    return L.markerClusterGroup({\n        maxClusterRadius: 30,\n        iconCreateFunction: function(cluster) {\n            return L.divIcon({\n                html: \"<p>\" + cluster.getChildCount() + \"</p>\",\n                className: \"group-icon\",\n                iconSize: L.point(30, 30)\n            });\n        },\n        showCoverageOnHover: false\n    });\n}\ngetData();\n\n//# sourceMappingURL=index.aaf628ea.js.map\n","let museumsGroup = createClusterGroup();\nlet shopsGroup = createClusterGroup();\n\nfunction createTileLayer(url, maxZoom, attribution) {\n    return L.tileLayer(url, {\n        maxZoom: maxZoom,\n        attribution: attribution,\n    });\n}\n\nlet osm = createTileLayer(\n    \"https://tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    18,\n    '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>',\n);\n\nlet ortofoto = createTileLayer(\n    \"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\",\n    18,\n    \"Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community\",\n);\n\nlet map = L.map(\"map\", {\n    center: [49.8037633, 15.4749126],\n    zoom: 7,\n    layers: [osm, museumsGroup, shopsGroup],\n});\n\nlet baseMaps = {\n    OSM: osm,\n    Ortofoto: ortofoto,\n};\n\nlet layerControl = L.control.layers(baseMaps, null).addTo(map);\n\nlet IconClass = L.Icon.extend({\n    options: {\n        iconSize: [30, 30],\n        iconAnchor: [15, 15],\n        popupAnchor: [0, -5],\n    },\n});\n\nlet museumIcon = new IconClass({ iconUrl: \"./img/museum.png\" });\n\nlet shopIcon = new IconClass({ iconUrl: \"./img/shop.png\" });\n\nasync function getData() {\n    let museums = await fetch(\"./data/museums.json\").then((response) =>\n        response.json(),\n    );\n\n    let shops = await fetch(\"./data/sellers.json\").then((response) =>\n        response.json(),\n    );\n\n    showData(museums, museumsGroup, museumIcon);\n    showData(shops, shopsGroup, shopIcon);\n\n    layerControl.addOverlay(museumsGroup, \"Muzea\");\n    layerControl.addOverlay(shopsGroup, \"Prodejci\");\n}\n\nfunction showData(items, group, icon) {\n    items.forEach((item) => {\n        group.addLayer(\n            L.marker([item.lat, item.lng], {\n                icon: icon,\n                title: item.title,\n            }).bindPopup(\n                \"<b>Název:</b> \" +\n                    item.title +\n                    \"<br><b>Adresa:</b> \" +\n                    item.address +\n                    \"<br><b>Město:</b> \" +\n                    item.city,\n            ),\n        );\n    });\n}\n\nfunction createClusterGroup() {\n    return L.markerClusterGroup({\n        maxClusterRadius: 30,\n        iconCreateFunction: function (cluster) {\n            return L.divIcon({\n                html: \"<p>\" + cluster.getChildCount() + \"</p>\",\n                className: \"group-icon\",\n                iconSize: L.point(30, 30),\n            });\n        },\n        showCoverageOnHover: false,\n    });\n}\n\ngetData();\n"],"names":["museumsGroup","createClusterGroup","shopsGroup","createTileLayer","url","maxZoom","attribution","L","tileLayer","osm","ortofoto","map","center","zoom","layers","layerControl","control","OSM","Ortofoto","addTo","IconClass","Icon","extend","options","iconSize","iconAnchor","popupAnchor","museumIcon","iconUrl","shopIcon","showData","items","group","icon","forEach","item","addLayer","marker","lat","lng","title","bindPopup","address","city","markerClusterGroup","maxClusterRadius","iconCreateFunction","cluster","divIcon","html","getChildCount","className","point","showCoverageOnHover","getData","museums","fetch","then","response","json","shops","addOverlay"],"version":3,"file":"index.aaf628ea.js.map"}